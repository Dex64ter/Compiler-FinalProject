# Generated from C:/Users/davij/PycharmProjects/Compiler-FinalProject\Compiler.g4 by ANTLR 4.12.0
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,19,138,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,1,0,1,
        0,1,1,1,1,1,2,1,2,1,3,1,3,1,4,1,4,1,4,1,4,1,4,1,5,1,5,1,5,1,5,1,
        6,1,6,1,6,1,6,1,6,1,7,1,7,1,7,1,7,1,8,1,8,1,9,1,9,1,9,1,9,1,9,1,
        9,1,9,1,9,1,10,1,10,1,10,1,10,1,10,1,10,1,11,1,11,1,12,1,12,1,13,
        1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,3,13,97,8,13,1,
        14,4,14,100,8,14,11,14,12,14,101,1,14,4,14,105,8,14,11,14,12,14,
        106,5,14,109,8,14,10,14,12,14,112,9,14,1,15,4,15,115,8,15,11,15,
        12,15,116,1,16,4,16,120,8,16,11,16,12,16,121,1,16,1,16,4,16,126,
        8,16,11,16,12,16,127,1,17,4,17,131,8,17,11,17,12,17,132,1,18,1,18,
        1,18,1,18,0,0,19,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,
        11,23,12,25,13,27,14,29,15,31,16,33,17,35,18,37,19,1,0,3,2,0,65,
        90,97,122,1,0,48,57,3,0,9,10,13,13,32,32,146,0,1,1,0,0,0,0,3,1,0,
        0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,
        0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,
        0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,
        0,0,35,1,0,0,0,0,37,1,0,0,0,1,39,1,0,0,0,3,41,1,0,0,0,5,43,1,0,0,
        0,7,45,1,0,0,0,9,47,1,0,0,0,11,52,1,0,0,0,13,56,1,0,0,0,15,61,1,
        0,0,0,17,65,1,0,0,0,19,67,1,0,0,0,21,75,1,0,0,0,23,81,1,0,0,0,25,
        83,1,0,0,0,27,96,1,0,0,0,29,99,1,0,0,0,31,114,1,0,0,0,33,119,1,0,
        0,0,35,130,1,0,0,0,37,134,1,0,0,0,39,40,5,40,0,0,40,2,1,0,0,0,41,
        42,5,44,0,0,42,4,1,0,0,0,43,44,5,41,0,0,44,6,1,0,0,0,45,46,5,58,
        0,0,46,8,1,0,0,0,47,48,5,118,0,0,48,49,5,111,0,0,49,50,5,105,0,0,
        50,51,5,100,0,0,51,10,1,0,0,0,52,53,5,101,0,0,53,54,5,110,0,0,54,
        55,5,100,0,0,55,12,1,0,0,0,56,57,5,109,0,0,57,58,5,97,0,0,58,59,
        5,105,0,0,59,60,5,110,0,0,60,14,1,0,0,0,61,62,5,118,0,0,62,63,5,
        97,0,0,63,64,5,114,0,0,64,16,1,0,0,0,65,66,5,59,0,0,66,18,1,0,0,
        0,67,68,5,67,0,0,68,69,5,79,0,0,69,70,5,77,0,0,70,71,5,65,0,0,71,
        72,5,78,0,0,72,73,5,68,0,0,73,74,5,79,0,0,74,20,1,0,0,0,75,76,5,
        99,0,0,76,77,5,111,0,0,77,78,5,110,0,0,78,79,5,115,0,0,79,80,5,116,
        0,0,80,22,1,0,0,0,81,82,5,61,0,0,82,24,1,0,0,0,83,84,5,34,0,0,84,
        26,1,0,0,0,85,86,5,105,0,0,86,87,5,110,0,0,87,97,5,116,0,0,88,89,
        5,115,0,0,89,90,5,116,0,0,90,97,5,114,0,0,91,92,5,102,0,0,92,93,
        5,108,0,0,93,94,5,111,0,0,94,95,5,97,0,0,95,97,5,116,0,0,96,85,1,
        0,0,0,96,88,1,0,0,0,96,91,1,0,0,0,97,28,1,0,0,0,98,100,7,0,0,0,99,
        98,1,0,0,0,100,101,1,0,0,0,101,99,1,0,0,0,101,102,1,0,0,0,102,110,
        1,0,0,0,103,105,7,1,0,0,104,103,1,0,0,0,105,106,1,0,0,0,106,104,
        1,0,0,0,106,107,1,0,0,0,107,109,1,0,0,0,108,104,1,0,0,0,109,112,
        1,0,0,0,110,108,1,0,0,0,110,111,1,0,0,0,111,30,1,0,0,0,112,110,1,
        0,0,0,113,115,7,0,0,0,114,113,1,0,0,0,115,116,1,0,0,0,116,114,1,
        0,0,0,116,117,1,0,0,0,117,32,1,0,0,0,118,120,7,1,0,0,119,118,1,0,
        0,0,120,121,1,0,0,0,121,119,1,0,0,0,121,122,1,0,0,0,122,123,1,0,
        0,0,123,125,5,46,0,0,124,126,7,1,0,0,125,124,1,0,0,0,126,127,1,0,
        0,0,127,125,1,0,0,0,127,128,1,0,0,0,128,34,1,0,0,0,129,131,7,1,0,
        0,130,129,1,0,0,0,131,132,1,0,0,0,132,130,1,0,0,0,132,133,1,0,0,
        0,133,36,1,0,0,0,134,135,7,2,0,0,135,136,1,0,0,0,136,137,6,18,0,
        0,137,38,1,0,0,0,9,0,96,101,106,110,116,121,127,132,1,6,0,0
    ]

class CompilerLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    VARTYPE = 14
    VARNAME = 15
    NAME = 16
    VALFLOAT = 17
    VALINT = 18
    WS = 19

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'('", "','", "')'", "':'", "'void'", "'end'", "'main'", "'var'", 
            "';'", "'COMANDO'", "'const'", "'='", "'\"'" ]

    symbolicNames = [ "<INVALID>",
            "VARTYPE", "VARNAME", "NAME", "VALFLOAT", "VALINT", "WS" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "VARTYPE", 
                  "VARNAME", "NAME", "VALFLOAT", "VALINT", "WS" ]

    grammarFileName = "Compiler.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.12.0")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


