# Generated from C:/Users/davij/PycharmProjects/Compiler-FinalProject\Compiler.g4 by ANTLR 4.12.0
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,42,305,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,
        32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,
        39,7,39,2,40,7,40,2,41,7,41,1,0,1,0,1,1,1,1,1,2,1,2,1,3,1,3,1,3,
        1,3,1,3,1,4,1,4,1,4,1,4,1,5,1,5,1,6,1,6,1,7,1,7,1,7,1,7,1,7,1,8,
        1,8,1,8,1,8,1,9,1,9,1,9,1,9,1,9,1,9,1,10,1,10,1,11,1,11,1,11,1,12,
        1,12,1,12,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,14,1,14,1,15,1,15,
        1,16,1,16,1,17,1,17,1,18,1,18,1,18,1,19,1,19,1,19,1,20,1,20,1,21,
        1,21,1,21,1,22,1,22,1,23,1,23,1,23,1,24,1,24,1,24,1,24,1,24,1,25,
        1,25,1,25,1,25,1,25,1,25,1,26,1,26,1,26,1,26,1,26,1,26,1,27,1,27,
        1,27,1,28,1,28,1,28,1,28,1,28,1,28,1,29,1,29,1,29,1,29,1,29,1,29,
        1,30,1,30,1,30,1,30,1,30,1,30,1,31,1,31,1,31,1,31,1,31,1,31,1,31,
        1,32,1,32,1,32,1,32,1,32,1,32,1,32,1,32,1,32,1,32,1,32,1,32,1,32,
        1,32,1,32,3,32,219,8,32,1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,33,
        1,33,3,33,230,8,33,1,34,4,34,233,8,34,11,34,12,34,234,1,34,4,34,
        238,8,34,11,34,12,34,239,5,34,242,8,34,10,34,12,34,245,9,34,1,35,
        1,35,5,35,249,8,35,10,35,12,35,252,9,35,1,35,3,35,255,8,35,1,35,
        1,35,1,36,4,36,260,8,36,11,36,12,36,261,1,36,1,36,4,36,266,8,36,
        11,36,12,36,267,1,37,4,37,271,8,37,11,37,12,37,272,1,38,1,38,1,39,
        1,39,1,39,1,39,5,39,281,8,39,10,39,12,39,284,9,39,1,39,1,39,1,39,
        1,39,1,39,1,40,1,40,1,40,1,40,5,40,295,8,40,10,40,12,40,298,9,40,
        1,40,1,40,1,41,1,41,1,41,1,41,1,282,0,42,1,1,3,2,5,3,7,4,9,5,11,
        6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,
        35,18,37,19,39,20,41,21,43,22,45,23,47,24,49,25,51,26,53,27,55,28,
        57,29,59,30,61,31,63,32,65,33,67,34,69,35,71,36,73,37,75,38,77,39,
        79,40,81,41,83,42,1,0,6,2,0,65,90,97,122,1,0,48,57,22,0,32,33,44,
        44,46,46,48,59,63,63,65,90,97,122,160,163,167,167,169,170,173,173,
        179,179,186,186,195,195,352,353,402,402,8218,8218,8220,8220,8225,
        8225,8240,8240,8364,8364,65533,65533,5,0,33,33,44,44,46,46,58,59,
        63,63,2,0,10,10,13,13,3,0,9,10,13,13,32,32,318,0,1,1,0,0,0,0,3,1,
        0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,
        0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,
        0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,
        0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,
        0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,
        0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,0,0,63,1,0,
        0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,0,0,73,1,0,
        0,0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,0,0,81,1,0,0,0,0,83,1,0,
        0,0,1,85,1,0,0,0,3,87,1,0,0,0,5,89,1,0,0,0,7,91,1,0,0,0,9,96,1,0,
        0,0,11,100,1,0,0,0,13,102,1,0,0,0,15,104,1,0,0,0,17,109,1,0,0,0,
        19,113,1,0,0,0,21,119,1,0,0,0,23,121,1,0,0,0,25,124,1,0,0,0,27,127,
        1,0,0,0,29,134,1,0,0,0,31,136,1,0,0,0,33,138,1,0,0,0,35,140,1,0,
        0,0,37,142,1,0,0,0,39,145,1,0,0,0,41,148,1,0,0,0,43,150,1,0,0,0,
        45,153,1,0,0,0,47,155,1,0,0,0,49,158,1,0,0,0,51,163,1,0,0,0,53,169,
        1,0,0,0,55,175,1,0,0,0,57,178,1,0,0,0,59,184,1,0,0,0,61,190,1,0,
        0,0,63,196,1,0,0,0,65,218,1,0,0,0,67,229,1,0,0,0,69,232,1,0,0,0,
        71,246,1,0,0,0,73,259,1,0,0,0,75,270,1,0,0,0,77,274,1,0,0,0,79,276,
        1,0,0,0,81,290,1,0,0,0,83,301,1,0,0,0,85,86,5,40,0,0,86,2,1,0,0,
        0,87,88,5,41,0,0,88,4,1,0,0,0,89,90,5,58,0,0,90,6,1,0,0,0,91,92,
        5,118,0,0,92,93,5,111,0,0,93,94,5,105,0,0,94,95,5,100,0,0,95,8,1,
        0,0,0,96,97,5,101,0,0,97,98,5,110,0,0,98,99,5,100,0,0,99,10,1,0,
        0,0,100,101,5,44,0,0,101,12,1,0,0,0,102,103,5,59,0,0,103,14,1,0,
        0,0,104,105,5,109,0,0,105,106,5,97,0,0,106,107,5,105,0,0,107,108,
        5,110,0,0,108,16,1,0,0,0,109,110,5,118,0,0,110,111,5,97,0,0,111,
        112,5,114,0,0,112,18,1,0,0,0,113,114,5,99,0,0,114,115,5,111,0,0,
        115,116,5,110,0,0,116,117,5,115,0,0,117,118,5,116,0,0,118,20,1,0,
        0,0,119,120,5,61,0,0,120,22,1,0,0,0,121,122,5,41,0,0,122,123,5,59,
        0,0,123,24,1,0,0,0,124,125,5,41,0,0,125,126,5,58,0,0,126,26,1,0,
        0,0,127,128,5,98,0,0,128,129,5,114,0,0,129,130,5,101,0,0,130,131,
        5,97,0,0,131,132,5,107,0,0,132,133,5,59,0,0,133,28,1,0,0,0,134,135,
        5,43,0,0,135,30,1,0,0,0,136,137,5,45,0,0,137,32,1,0,0,0,138,139,
        5,42,0,0,139,34,1,0,0,0,140,141,5,47,0,0,141,36,1,0,0,0,142,143,
        5,61,0,0,143,144,5,61,0,0,144,38,1,0,0,0,145,146,5,33,0,0,146,147,
        5,61,0,0,147,40,1,0,0,0,148,149,5,60,0,0,149,42,1,0,0,0,150,151,
        5,60,0,0,151,152,5,61,0,0,152,44,1,0,0,0,153,154,5,62,0,0,154,46,
        1,0,0,0,155,156,5,62,0,0,156,157,5,61,0,0,157,48,1,0,0,0,158,159,
        5,116,0,0,159,160,5,114,0,0,160,161,5,117,0,0,161,162,5,101,0,0,
        162,50,1,0,0,0,163,164,5,102,0,0,164,165,5,97,0,0,165,166,5,108,
        0,0,166,167,5,115,0,0,167,168,5,101,0,0,168,52,1,0,0,0,169,170,5,
        119,0,0,170,171,5,104,0,0,171,172,5,105,0,0,172,173,5,108,0,0,173,
        174,5,101,0,0,174,54,1,0,0,0,175,176,5,105,0,0,176,177,5,102,0,0,
        177,56,1,0,0,0,178,179,5,101,0,0,179,180,5,108,0,0,180,181,5,115,
        0,0,181,182,5,101,0,0,182,183,5,58,0,0,183,58,1,0,0,0,184,185,5,
        112,0,0,185,186,5,114,0,0,186,187,5,105,0,0,187,188,5,110,0,0,188,
        189,5,116,0,0,189,60,1,0,0,0,190,191,5,115,0,0,191,192,5,99,0,0,
        192,193,5,97,0,0,193,194,5,110,0,0,194,195,5,102,0,0,195,62,1,0,
        0,0,196,197,5,114,0,0,197,198,5,101,0,0,198,199,5,116,0,0,199,200,
        5,117,0,0,200,201,5,114,0,0,201,202,5,110,0,0,202,64,1,0,0,0,203,
        204,5,105,0,0,204,205,5,110,0,0,205,219,5,116,0,0,206,207,5,115,
        0,0,207,208,5,116,0,0,208,219,5,114,0,0,209,210,5,102,0,0,210,211,
        5,108,0,0,211,212,5,111,0,0,212,213,5,97,0,0,213,219,5,116,0,0,214,
        215,5,98,0,0,215,216,5,111,0,0,216,217,5,111,0,0,217,219,5,108,0,
        0,218,203,1,0,0,0,218,206,1,0,0,0,218,209,1,0,0,0,218,214,1,0,0,
        0,219,66,1,0,0,0,220,221,5,116,0,0,221,222,5,114,0,0,222,223,5,117,
        0,0,223,230,5,101,0,0,224,225,5,102,0,0,225,226,5,97,0,0,226,227,
        5,108,0,0,227,228,5,115,0,0,228,230,5,101,0,0,229,220,1,0,0,0,229,
        224,1,0,0,0,230,68,1,0,0,0,231,233,7,0,0,0,232,231,1,0,0,0,233,234,
        1,0,0,0,234,232,1,0,0,0,234,235,1,0,0,0,235,243,1,0,0,0,236,238,
        7,1,0,0,237,236,1,0,0,0,238,239,1,0,0,0,239,237,1,0,0,0,239,240,
        1,0,0,0,240,242,1,0,0,0,241,237,1,0,0,0,242,245,1,0,0,0,243,241,
        1,0,0,0,243,244,1,0,0,0,244,70,1,0,0,0,245,243,1,0,0,0,246,250,5,
        34,0,0,247,249,7,2,0,0,248,247,1,0,0,0,249,252,1,0,0,0,250,248,1,
        0,0,0,250,251,1,0,0,0,251,254,1,0,0,0,252,250,1,0,0,0,253,255,3,
        77,38,0,254,253,1,0,0,0,254,255,1,0,0,0,255,256,1,0,0,0,256,257,
        5,34,0,0,257,72,1,0,0,0,258,260,7,1,0,0,259,258,1,0,0,0,260,261,
        1,0,0,0,261,259,1,0,0,0,261,262,1,0,0,0,262,263,1,0,0,0,263,265,
        5,46,0,0,264,266,7,1,0,0,265,264,1,0,0,0,266,267,1,0,0,0,267,265,
        1,0,0,0,267,268,1,0,0,0,268,74,1,0,0,0,269,271,7,1,0,0,270,269,1,
        0,0,0,271,272,1,0,0,0,272,270,1,0,0,0,272,273,1,0,0,0,273,76,1,0,
        0,0,274,275,7,3,0,0,275,78,1,0,0,0,276,277,5,47,0,0,277,278,5,42,
        0,0,278,282,1,0,0,0,279,281,9,0,0,0,280,279,1,0,0,0,281,284,1,0,
        0,0,282,283,1,0,0,0,282,280,1,0,0,0,283,285,1,0,0,0,284,282,1,0,
        0,0,285,286,5,42,0,0,286,287,5,47,0,0,287,288,1,0,0,0,288,289,6,
        39,0,0,289,80,1,0,0,0,290,291,5,47,0,0,291,292,5,47,0,0,292,296,
        1,0,0,0,293,295,8,4,0,0,294,293,1,0,0,0,295,298,1,0,0,0,296,294,
        1,0,0,0,296,297,1,0,0,0,297,299,1,0,0,0,298,296,1,0,0,0,299,300,
        6,40,0,0,300,82,1,0,0,0,301,302,7,5,0,0,302,303,1,0,0,0,303,304,
        6,41,0,0,304,84,1,0,0,0,13,0,218,229,234,239,243,250,254,261,267,
        272,282,296,1,6,0,0
    ]

class CompilerLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    CMDWHILE = 27
    CMDIF = 28
    CMDELSE = 29
    PRINT = 30
    SCAN = 31
    RETORNO = 32
    VARTYPE = 33
    VALBOOL = 34
    VARNAME = 35
    STRING = 36
    VALFLOAT = 37
    VALINT = 38
    PONTUACAO = 39
    COMMENT = 40
    LINE_COMMENT = 41
    WS = 42

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'('", "')'", "':'", "'void'", "'end'", "','", "';'", "'main'", 
            "'var'", "'const'", "'='", "');'", "'):'", "'break;'", "'+'", 
            "'-'", "'*'", "'/'", "'=='", "'!='", "'<'", "'<='", "'>'", "'>='", 
            "'true'", "'false'", "'while'", "'if'", "'else:'", "'print'", 
            "'scanf'", "'return'" ]

    symbolicNames = [ "<INVALID>",
            "CMDWHILE", "CMDIF", "CMDELSE", "PRINT", "SCAN", "RETORNO", 
            "VARTYPE", "VALBOOL", "VARNAME", "STRING", "VALFLOAT", "VALINT", 
            "PONTUACAO", "COMMENT", "LINE_COMMENT", "WS" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "T__25", 
                  "CMDWHILE", "CMDIF", "CMDELSE", "PRINT", "SCAN", "RETORNO", 
                  "VARTYPE", "VALBOOL", "VARNAME", "STRING", "VALFLOAT", 
                  "VALINT", "PONTUACAO", "COMMENT", "LINE_COMMENT", "WS" ]

    grammarFileName = "Compiler.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.12.0")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


